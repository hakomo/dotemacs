template<class T>
void sieve(vector<int>& a,vector<T>& b,int i,int l,int m,T n,T o){
  int j,k;
  for(;i<m*m;i+=m){
    for(j=0;j<m;++j)
      b[j+l]=n+i+j;
    for(j=0;j<(int)a.size()&&(T)a[j]*a[j]<n+m+i;++j)
      for(k=(n+i)%a[j]?a[j]-(n+i)%a[j]:0;k<m;k+=a[j])
        b[k+l]=0;
    l=remove(b.begin()+l,b.begin()+l+m,0)-b.begin();
  }
  b.erase(lower_bound(b.begin(),b.begin()+l,o),b.end());
}
vector<int> sieve(int n){
  int i,j;
  vector<int> a(n/log(n+2)*1.1+468);
  int m=sqrt(n)+1;
  for(i=2;i<m;++i)
    a[i]=i;
  for(i=2;i*i<m;++i){
    if(!a[i])continue;
    for(j=i*i;j<m;j+=i)
      a[j]=0;
  }
  sieve(a,a,m,remove(a.begin(),a.begin()+m,0)-a.begin(),m,0,n);
  return a;
}
vector<long long> sieve(long long n,long long o){
  vector<int> a=sieve(sqrt(o)+1);
  vector<long long> b(o/log(o+2)*1.1-n/log(n+2)+469);
  int l=copy(lower_bound(a.begin(),a.end(),n),a.end(),b.begin())-b.begin();
  sieve(a,b,0,l,sqrt(o-n-l)+1,max<long long>(n,sqrt(o)+1),o);
  return b;
}